'use strict'
/**
 * AJAX - Asynchronous Javascript and XML позволяет нам ассинхронно взаимодействовать
 * с удаленным сервером дл получения или отправки данных.
 * Позволяет сделать запрос и получить ответ.
 * Клиент(браузер) делает запрос на сервер и получить ответ JSON
 * 
 * под сервером нас будет интересовать WEB API(интерфейс взаимодействия с программой)
 * JSON человекочитаемый формат для обмена данными
 * 
 * Неполная модель запроса и ответа
 * У нас есть клиент, и мы хотим запросить список продуктов для него.
 * Мы соответсвенно делаем запрос 'https://dummyjson.com/products/1'
 * В рамках этой строки клиент понимает что под капотом есть:
 *  протокол https, 
 *  хост dummyjson.com,
 *  путь products/1.
 * Понимая все это, клиент дальше пытается построить запрос. 
 * Но для него dummyjson.com - неизвестн что, он не знает куда пойти. 
 * Потому что наше взаимодействие по сети осуществляется путем получения IP адресса.
 * Ему нужно понимать в какой конкретно адресс пойти, чтобы получить данные.
 * А клиент по умл этого не знает. Но знает об этом DNS сервер.
 * И первое что делает клиент - обращается к DNS серверу(спрашивает IP адрес).
 * DNS занимается тем, что преобразует названия сайтов — доменные имена, которые вводят
 * в поисковую строку браузера в IP-адреса конкретных серверов.
 * В итоге клиент получает понятный ему IP, и может установить соединение с сервером.
 * По этому соединение клиенты пожет оправлять запросы исползую HTTP протокол.
 *  GET /products/1 HTTP/2
 *  Host: dummyjson.com
 *  user-agent: insomnia/2022.7.2
 * 
 * Получать пакеты данных.
 *  HTTP/2 200
 *  access-control-allow-origin: *
 *  cache-control: public, max-age=2592000
 *  ....
 * 
 *  
*/
